{"version":3,"sources":["services/constants.js","services/api-service.js","services/notification.js","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/LoadMoreButton/LoadMoreButton.styled.jsx","components/LoadMoreButton/LoadMoreButton.jsx","components/Spinner/Spinner.styled.jsx","components/Spinner/Spinner.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["API_KEY","searchQuery","page","a","url","axios","get","data","hits","defaults","baseURL","fetchImages","onShowInfoNotification","info","title","text","delay","Header","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","SearchBar","state","handleSearchQueryChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","this","type","autoComplete","autoFocus","placeholder","name","onChange","Component","Item","Image","ImageGalleryItem","tags","previewImg","selectedImage","src","alt","onClick","List","ImageGallery","images","map","id","webformatURL","largeImageURL","Button","LoadMoreButton","SpinnerContainer","Spinner","color","height","width","ModalOverlay","ModalContainer","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","selectedImg","createPortal","App","status","handleFormSubmit","resetState","loadMoreBtnClick","prevState","handleSelectedImage","largeImageUrl","closeModal","_","prevSearch","nextSearch","prevPage","nextPage","length","Error","error","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b7a15c10.chunk.js","sourcesContent":["const API_KEY = '21672649-f94e47de3526d257f0e860889';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\nexport { API_KEY, BASE_URL };","import axios from 'axios';\r\nimport { BASE_URL, API_KEY } from \"../services/constants\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n        \r\nasync function fetchImages(searchQuery, page) {\r\n    const url = `/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=12&key=${API_KEY}`\r\n    const { data } = await axios.get(url);\r\n    return data.hits;\r\n}\r\n    \r\nexport default fetchImages;","import {info, error } from \"@pnotify/core\";\r\nimport '@pnotify/core/dist/Material.css';\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\n\r\nconst onShowInfoNotification = () => {\r\n     info ({\r\n    title: 'Invalid request',\r\n    text: `The search field is empty!`,\r\n         delay: 2000,\r\n     });\r\n}\r\n\r\nconst onShowErrorNotification = () => {\r\n     error ({\r\n    title: 'Invalid request',\r\n    text: `Please enter the right query!`,\r\n    delay: 2000,\r\n     });\r\n}\r\n\r\nexport { onShowInfoNotification, onShowErrorNotification };","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  margin-bottom: 25px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\ndisplay: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SearchFormButton = styled.button`\r\ndisplay: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n  opacity: 1;\r\n}\r\n`;\r\n\r\nexport const SearchFormButtonLabel = styled.span`\r\nposition: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const SearchFormInput = styled.input`\r\ndisplay: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n`;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {onShowInfoNotification} from \"../../services/notification\"\r\nimport {Header, SearchForm, SearchFormButton, SearchFormButtonLabel, SearchFormInput} from \"./SearchBar.styled\"\r\n\r\nexport default class SearchBar extends Component {\r\n    state = {\r\n        searchQuery: \"\",\r\n    }\r\n\r\n    handleSearchQueryChange = (e) => {\r\n        this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.searchQuery.trim() === \"\") {\r\n            onShowInfoNotification()\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit(this.state.searchQuery);\r\n        this.setState({ searchQuery: \"\" });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header>\r\n            <SearchForm onSubmit={this.handleSubmit}>\r\n                <SearchFormButton type=\"submit\">\r\n                <SearchFormButtonLabel>Search</SearchFormButtonLabel>\r\n                </SearchFormButton>\r\n                    <SearchFormInput\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        name=\"searchQuery\"\r\n                        value={this.state.searchQuery}\r\n                        onChange={this.handleSearchQueryChange}/>\r\n            </SearchForm>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n        onSubmit: PropTypes.func,\r\n    }\r\n\r\n\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Item = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  cursor: zoom-in;\r\n}\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Item, Image} from \"./ImageGalleryItem.styled\"\r\n\r\nexport default function ImageGalleryItem({tags, previewImg, selectedImage}) {\r\n    return (\r\n        <Item>\r\n            <Image src={previewImg} alt={tags} onClick={selectedImage}/>\r\n        </Item>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    tags: PropTypes.string.isRequired,\r\n    previewImg: PropTypes.string.isRequired,\r\n    selectedImage: PropTypes.func,\r\n}\r\n\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  /* margin-bottom: 25px; */\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const ImageGalleryItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const ImageGalleryItemImage = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  cursor: zoom-in;\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\"\r\nimport { List } from \"./ImageGallery.styled\";\r\n\r\nexport default function ImageGallery({images, selectedImage}) {\r\n    return (\r\n        <List>\r\n            {images.map(({id, webformatURL, tags, largeImageURL}) => (\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    previewImg={webformatURL}\r\n                    tags={tags}\r\n                    selectedImage={()=> selectedImage(largeImageURL, tags)}/>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n    })),\r\n    selectedImage:PropTypes.func,\r\n}\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Button = styled.button`\r\npadding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n  0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n  background-color: #303f9f;\r\n}\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"./LoadMoreButton.styled\";\r\n\r\nexport default function LoadMoreButton({onClick}) {\r\n    return (\r\n        <Button type=\"button\" onClick={onClick}>Load more</Button>\r\n    )\r\n}\r\n\r\nLoadMoreButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n}","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const SpinnerContainer = styled.div`\r\nposition: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {SpinnerContainer} from \"./Spinner.styled\"\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <SpinnerContainer>\r\n            <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={280} width={280} />\r\n        </SpinnerContainer>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n\r\nexport const Image = styled.img`\r\nwidth: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ModalOverlay, ModalContainer, Image } from \"./Modal.styled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n    static propTypes = {\r\n        selectedImg: PropTypes.string,\r\n        tags: PropTypes.string,\r\n        onClose: PropTypes.func,\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyDown)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown)\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === \"Escape\") {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleBackdropClick = (e) => {\r\n        if (e.target === e.currentTarget) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { selectedImg, tags } = this.props;\r\n\r\n        return createPortal(\r\n            <ModalOverlay onClick={this.handleBackdropClick}>\r\n             <ModalContainer>\r\n                 <Image src={selectedImg} alt={tags}/>\r\n             </ModalContainer>\r\n            </ModalOverlay>, modalRoot)\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport fetchImages from \"./services/api-service\";\nimport {onShowErrorNotification} from \"./services/notification\"\nimport SearchBar from \"./components/SearchBar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport LoadMoreButton from \"./components/LoadMoreButton\";\nimport Spinner from \"./components/Spinner\";\nimport Modal from \"./components/Modal\";\n\nexport default class App extends Component {\n  static propTypes = {\n    searchQuery: PropTypes.string,\n  };\n  \n  state = {\n    searchQuery: \"\",\n    page: 1,\n    images: [],\n    selectedImg: null,\n    alt: null,\n    status: \"idle\"\n  }\n\n  async componentDidUpdate(_, prevState) {\n    \n        const prevSearch = prevState.searchQuery;\n        const nextSearch = this.state.searchQuery;\n\n        const prevPage = prevState.page;\n        const nextPage = this.state.page;\n\n    if (prevSearch !== nextSearch || prevPage !== nextPage) {\n      this.setState({ status: \"pending\", })\n\n      try {\n        const images = await fetchImages(nextSearch, nextPage);\n        \n        if (!images.length) {\n          throw new Error();\n        }\n\n        this.setState(prevState => ({\n        images: [...prevState.images, ...images],\n        status: \"resolved\"\n        }))\n      } catch (error) {\n        onShowErrorNotification();\n        this.setState({ status: \"rejected\" });\n\n      }\n      \n      this.state.page > 1 &&\n        window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n        });\n      \n    }\n}\n\n  handleFormSubmit = searchQuery => {\n    if (this.state.searchQuery === searchQuery) {\n      return\n    }\n    \n    this.resetState();\n    this.setState({ searchQuery});\n  };\n\n  loadMoreBtnClick = () => {\n        this.setState(prevState => ({\n         page: prevState.page + 1,\n        }));\n    }\n\n  handleSelectedImage = (largeImageUrl, tags) => {\n    this.setState({\n      selectedImg: largeImageUrl,\n      alt: tags\n    })\n  }\n  \n  closeModal = () => {\n    this.setState({\n      selectedImg: null,\n    })\n  }\n\n  resetState = () => {\n    this.setState({\n      searchQuery: \"\",\n      page: 1,\n      images: [],\n      selectedImg: null,\n      alt: null,\n      status: \"idle\"\n    })\n  }\n\n  render() {\n\n    const { images, selectedImg, alt, status} = this.state;\n    \n    if (status === \"idle\") {\n      return <SearchBar onSubmit={this.handleFormSubmit} />\n    }\n\n    if (status === \"pending\") {\n      return (\n        <>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <Spinner />\n          <ImageGallery images={images} selectedImage={this.handleSelectedImage}/>\n          {images.length > 0 && <LoadMoreButton onClick={this.loadMoreBtnClick} />}\n        </>\n      )\n    }\n\n    if (status === \"resolved\") {\n      return (\n        <>\n          <SearchBar onSubmit={this.handleFormSubmit} />\n          <ImageGallery images={images} selectedImage={this.handleSelectedImage}/>\n        {selectedImg && <Modal selectedImg={selectedImg} tags={alt} onClose={this.closeModal}/>}\n        {images.length > 0 && <LoadMoreButton onClick={this.loadMoreBtnClick}/>}\n        </>\n      )\n    }\n\n    if (status === \"rejected\") {\n      return <>\n        <SearchBar onSubmit={this.handleFormSubmit} />\n      </>\n    }\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}